@page "/Empleados"
@inject IHttpService http
<h1>Empleados</h1>


<table>
    <tr>
        <th class="p-3">Id</th>

        <th class="p-3">Name</th>

        <th class="p-3">Pasword</th>
    </tr>
    @if (empleado == null)
    {
        <tr>Cargando.....</tr>
    }
    else if (empleado.Count == 0)
    {
        <tr>No existen empleados</tr>
    }
    else
    {
        @foreach (var item in empleado)
        {
            <tr>
                <td class="p-3">@item.Id</td>
                <td class="p-3">@item.Name</td>
                <td class="p-3">@item.Password</td>
                <td class="p-3">
                        <a class="btn btn-success"
                            href="EmpleadosEditar/@item.Id"> Editar </a>

@*                        <NavLink class="btn btn-success" href="@($"Empleado/editar/{item.Id}")">
                            Editar a
                        </NavLink>*@
                    </td>
                <td class="p-3"><button class="btn btn-warning" @onclick="()=>Eliminar(item)">Eliminar</button></td>
            </tr>
        }
    }
</table>

<Confirmacion @ref="confirmacion"
              onConfirm="GrabarEliminar"
              onCancel="Cancelar"
              Titulo="BORRAR"
              textCancelar="Salir"
              textOk="Aceptar">
    <div>¿Desea eliminar el empleado @eliminarEmpleado.Id?</div>
</Confirmacion>


@code {

    public List<Empleado> empleado { get; set; }

    public Confirmacion confirmacion { get; set; }

    public Empleado eliminarEmpleado { get; set; }



    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        await Leer();
    }

    public async Task Leer()
    {    
        var respuestaHttp = await http.Get<List<Empleado>>("Api/Empleado");
      
        if (!respuestaHttp.Error)
        {
            empleado = respuestaHttp.Respuesta;           
        }
    }


    private void Eliminar(Bebidas24hs.DataBase.Data.Entidades.Empleado empleadoEliminar)
        {
            confirmacion.Mostrar();
            eliminarEmpleado = empleadoEliminar;
        }


    private async Task GrabarEliminar()
        {
            var respuesta = await http.Delete("Api/Empleado/{eliminarEmpleado.Id}");
            if (respuesta.Error)

            {
                var body = await respuesta.GetBody();
            }
            Cancelar();
            await Leer();
        }

    private void Cancelar()
        {
            confirmacion.Ocultar();
            eliminarEmpleado = null;
        }

}
