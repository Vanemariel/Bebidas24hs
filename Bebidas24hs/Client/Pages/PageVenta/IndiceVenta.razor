@page "/venta"
@using Bebidas24hs.Client.Shared
@inject IHttpService http
<h1>Producto</h1>

<a class="btn btn-primary" href="Venta/Create">Nuevo</a>
<a class="colorFondo"</a>
<br />
<table>
    <tr>
        <th>Id</th>

        <th>EmpleadoId</th>

        <th>TurnoId</th>


    </tr>
    @if (venta == null)
    {
        <tr>Cargando.....</tr>
    }
    else if (venta.Count == 0)
    {
        <tr>No existen ventas</tr>
    }
    else
    {
        @foreach (var item in venta)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.EmpleadoId</td>
                <td>@item.TurnoId</td>
               
                <td>
                    <a class="btn btn-success"
                       href="venta/editar/@item.Id">
                        Editar
                    </a>
                </td>
                <td><button class="btn btn-warning" @onclick="()=>Eliminar(item)">Eliminar</button></td>
            </tr>
        }
    }
</table>
<Confirmacion @ref="confirmacion"
              onConfirm="GrabarEliminar"
              onCancel="Cancelar"
              Titulo="BORRAR"
              textCancelar="Salir"
              textOk="Aceptar">
    <div>¿Desea eliminar el empleado @eliminarEmpleado.Id?</div>
</Confirmacion>


@code {
    List<
        Bebidas24hs.DataBase.Data.Entidades.Venta
     > producto;
    Confirmacion confirmacion;

    Bebidas24hs.DataBase.Data.Entidades.Venta eliminarVenta;

    string variableInventada = "";

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        await Leer();
    }

    private async Task Leer()
    {    
        var respuestaHttp = await http.Get<List<Bebidas24hs.DataBase.Data.Entidades.Venta>>("Api/Venta");
      
        if (!respuestaHttp.Error)
        {
            producto = respuestaHttp.Respuesta;           
        }
    }


        private void Eliminar(Bebidas24hs.DataBase.Data.Entidades.Venta ventaEliminar)
        {
            confirmacion.Mostrar();
            eliminarProducto = productoEliminar;
        }


        private async Task GrabarEliminar()
        {
            var respuesta = await http.Delete("Api/Venta/{eliminarVenta.Id}");
            if (respuesta.Error)

            {
                var body = await respuesta.GetBody();
            }
            Cancelar();
            await Leer();
        }

        private void Cancelar()
        {
            confirmacion.Ocultar();
            eliminarVenta = null;
        }
//los @page me dan la direccion
//los href me re dirigen a los otros componentes razor de crear o editar
//los botones son html

}
