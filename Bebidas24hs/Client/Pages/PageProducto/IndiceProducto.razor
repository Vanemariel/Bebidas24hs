@page "/producto"
@inject IHttpService http
@inject NavigationManager navigationManager;

<h1>Producto</h1>


<table>

    @if (productos == null)
    {
        <tr>Cargando.....</tr>
    }
    else if (productos.Count == 0)
    {
        <tr>No existen productos</tr>
    }
    else
    {
        <div class="form-group">
            <div class="p-2">
                <button class="btn btn-warning" @onclick="Nuevo">Nuevo</button>
            </div>
        </div>

        <tr>
            <th class="p-3">Id</th>

            <th class="p-3">VentaId</th>

            <th class="p-3">Precio</th>

            <th class="p-3">Codigo</th>

            <th class="p-3">Descripcion</th>
        </tr>

        @foreach (var item in productos)
        {
            <tr>
                <td class="p-3">@item.Id</td>

                <td class="p-3">@item.VentaId</td>

                <td class="p-3">@item.Precio</td>

                <th class="p-3">Codigo</th>

                <th class="p-3">Descripcion</th>

                <td class="p-3">
                        <a class="btn btn-success"
                            href="ProductosEditar/@item.Id"> Editar </a>
                    </td>
                <td class="p-3"><button class="btn btn-warning" @onclick="()=>Eliminar(item)">Eliminar</button></td>
            </tr>
        }
    }
</table>

<Confirmacion @ref="confirmacion"
              onConfirm="GrabarEliminar"
              onCancel="Cancelar"
              Titulo="BORRAR"
              textCancelar="Salir"
              textOk="Aceptar">
    <div>¿Desea eliminar el producto @eliminarProducto.Id?</div>
</Confirmacion>

@code {
        List<
        Bebidas24hs.DataBase.Data.Entidades.Producto
    > productos;
    /*Shared.Confirmacion confirmacion;

    Bebidas24hs.DataBase.Data.Entidades.Producto eliminarProducto;

    string variableInventada = "";*/

    
    public Confirmacion confirmacion { get; set; }
  
    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        await Leer();
    }

    private async Task Leer()
    {    
        var respuestaHttp = await http.Get<List<Producto>>("Api/Producto");

        if (!respuestaHttp.Error)
        {
            productos = respuestaHttp.Respuesta;           
        }
    }


    private void Eliminar(Producto productoEliminar)
    {
        confirmacion.Mostrar();
        eliminarProducto = productoEliminar;
    }


    private async Task GrabarEliminar()
    {
        var respuesta = await http.Delete("Api/Producto/{eliminarProducto.Id}");
        if (respuesta.Error)
        {
            var body = await respuesta.GetBody();
        }
       Cancelar();
       await Leer();
    }

    private void Cancelar()
    {
        confirmacion.Ocultar();
        eliminarProducto = null;
    }

     private void Nuevo() {
        navigationManager.NavigateTo("/NuevoProducto");
    }
     //los @page me dan la direccion
    //los href me re dirigen a los otros componentes razor de crear o editar
    //los botones son html

}
