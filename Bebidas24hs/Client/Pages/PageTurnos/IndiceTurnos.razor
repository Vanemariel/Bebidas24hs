@page "/turnos"
@inject IHttpService http
<h1>Turnos</h1>

<a class="btn btn-primary" href="Turno/Create">Nuevo</a>
<a class="colorFondo"</a>
<br />
<table>
    <tr>
        <th>Id</th>
        <th>Dia</th>
        <th>HorarioDesde</th>
        <th>HorarioHasta</th>

    </tr>
    @if (turno == null)
    {
        <tr>Cargando.....</tr>
    }
    else if (turno.Count == 0)
    {
        <tr>No existen turnos</tr>
    }
    else
    {
        @foreach (var item in turno)
        {
            <tr>
                <th>@item.Id</th>
                <td>@item.Dia</td>
                <td>@item.HorarioDesde</td>
                 <td>@item.HorarioHasta</td>
                
                <td>
                    <a class="btn btn-success"
                       href="turno/editar/@item.Id">
                        Editar
                    </a>
                </td>
                <td><button class="btn btn-warning" @onclick="()=>Eliminar(item)">Eliminar</button></td>
            </tr>
        }
    }
</table>

<Confirmacion @ref="confirmacion"
              onConfirm="GrabarEliminar"
              onCancel="Cancelar"
              Titulo="BORRAR"
              textCancelar="Salir"
              textOk="Aceptar">
    <div>¿Desea eliminar el turno @eliminarTurno.Id?</div>
</Confirmacion>


@code {
    List<
        Bebidas24hs.DataBase.Data.Entidades.Turno
     > turno;
    Confirmacion confirmacion;

    Bebidas24hs.DataBase.Data.Entidades.Turno eliminarTurno;

    string variableInventada = "";

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        await Leer();
    }

    private async Task Leer()
    {    
        var respuestaHttp = await http.Get<List<Bebidas24hs.DataBase.Data.Entidades.Turno>>("Api/Turno");
      
        if (!respuestaHttp.Error)
        {
            turno = respuestaHttp.Respuesta;           
        }
    }


        private void Eliminar(Bebidas24hs.DataBase.Data.Entidades.Turno turnoEliminar)
        {
            confirmacion.Mostrar();
            eliminarTurno = turnoEliminar;
        }


        private async Task GrabarEliminar()
        {
            var respuesta = await http.Delete("Api/Venta/{eliminarTurno.Id}");
            if (respuesta.Error)

            {
                var body = await respuesta.GetBody();
            }
            Cancelar();
            await Leer();
        }

        private void Cancelar()
        {
            confirmacion.Ocultar();
            eliminarTurno = null;
        }
//los @page me dan la direccion
//los href me re dirigen a los otros componentes razor de crear o editar
//los botones son html

}
