// <auto-generated />
using Bebidas24hs.DataBase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bebidas24hs.DataBase.Migrations
{
    [DbContext(typeof(BDContext))]
    partial class BDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Bebidas24hs.DataBase.Data.Entidades.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Entity_Id")
                        .IsUnique();

                    b.ToTable("Empleados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mariano",
                            Password = "TeletubiTutu"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Juanchi",
                            Password = "JuanchiLanchi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Vanesa",
                            Password = "PepeSalta"
                        });
                });

            modelBuilder.Entity("Bebidas24hs.DataBase.Data.Entidades.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Precio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VentaId");

                    b.HasIndex(new[] { "Id" }, "Entity_Id")
                        .IsUnique()
                        .HasDatabaseName("Entity_Id1");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "3FQA",
                            Descripcion = "Coca Cola",
                            Precio = "200",
                            VentaId = 112
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "12312FQA",
                            Descripcion = "Pepsi",
                            Precio = "300",
                            VentaId = 2321
                        });
                });

            modelBuilder.Entity("Bebidas24hs.DataBase.Data.Entidades.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex(new[] { "Id" }, "Entity_Id")
                        .IsUnique()
                        .HasDatabaseName("Entity_Id2");

                    b.ToTable("Ventas");

                    b.HasData(
                        new
                        {
                            Id = 2321,
                            EmpleadoId = 1
                        },
                        new
                        {
                            Id = 112,
                            EmpleadoId = 1
                        });
                });

            modelBuilder.Entity("Bebidas24hs.DataBase.Data.Entidades.Producto", b =>
                {
                    b.HasOne("Bebidas24hs.DataBase.Data.Entidades.Venta", "Venta")
                        .WithMany("Productos")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Bebidas24hs.DataBase.Data.Entidades.Venta", b =>
                {
                    b.HasOne("Bebidas24hs.DataBase.Data.Entidades.Empleado", "Empleado")
                        .WithMany("Ventas")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Bebidas24hs.DataBase.Data.Entidades.Empleado", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Bebidas24hs.DataBase.Data.Entidades.Venta", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
